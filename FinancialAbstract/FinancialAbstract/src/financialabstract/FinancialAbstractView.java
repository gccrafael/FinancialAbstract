/*
 * FinancialAbstractView.java
 */

package financialabstract;

import Business.*;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Toolkit;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import java.text.NumberFormat;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * The application's main frame.
 */
public class FinancialAbstractView extends FrameView {
    Financial financial;
    public FinancialAbstractView(SingleFrameApplication app) {
        super(app);

        initComponents();
        URL url = ClassLoader.getSystemResource("financialabstract/sign.png");
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.createImage(url);

        Frame[] frames = JFrame.getFrames();
        for (int i = 0; i < frames.length; i++) {
            frames[i].setIconImage(img);
        }
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = FinancialAbstractApp.getApplication().getMainFrame();
            aboutBox = new FinancialAbstractAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        FinancialAbstractApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jradAnnuity = new javax.swing.JRadioButton();
        jradLoan = new javax.swing.JRadioButton();
        jlblAmount = new javax.swing.JLabel();
        jtxtAmount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtRate = new javax.swing.JTextField();
        jtxtTerm = new javax.swing.JTextField();
        jbCalculate = new javax.swing.JButton();
        jlblResult = new javax.swing.JLabel();
        jtxtResult = new javax.swing.JTextField();
        jbtnSchedule = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        buttonGroup1 = new javax.swing.ButtonGroup();

        JPanel.setName("JPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(financialabstract.FinancialAbstractApp.class).getContext().getResourceMap(FinancialAbstractView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        buttonGroup1.add(jradAnnuity);
        jradAnnuity.setText(resourceMap.getString("jradAnnuity.text")); // NOI18N
        jradAnnuity.setName("jradAnnuity"); // NOI18N
        jradAnnuity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradAnnuityItemStateChanged(evt);
            }
        });

        buttonGroup1.add(jradLoan);
        jradLoan.setText(resourceMap.getString("jradLoan.text")); // NOI18N
        jradLoan.setName("jradLoan"); // NOI18N
        jradLoan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jradLoanItemStateChanged(evt);
            }
        });

        jlblAmount.setText(resourceMap.getString("jlblAmount.text")); // NOI18N
        jlblAmount.setName("jlblAmount"); // NOI18N

        jtxtAmount.setText(resourceMap.getString("jtxtAmount.text")); // NOI18N
        jtxtAmount.setName("jtxtAmount"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jtxtRate.setText(resourceMap.getString("jtxtRate.text")); // NOI18N
        jtxtRate.setName("jtxtRate"); // NOI18N

        jtxtTerm.setText(resourceMap.getString("jtxtTerm.text")); // NOI18N
        jtxtTerm.setName("jtxtTerm"); // NOI18N

        jbCalculate.setText(resourceMap.getString("jbCalculate.text")); // NOI18N
        jbCalculate.setName("jbCalculate"); // NOI18N
        jbCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCalculateActionPerformed(evt);
            }
        });

        jlblResult.setText(resourceMap.getString("jlblResult.text")); // NOI18N
        jlblResult.setName("jlblResult"); // NOI18N

        jtxtResult.setEditable(false);
        jtxtResult.setText(resourceMap.getString("jtxtResult.text")); // NOI18N
        jtxtResult.setName("jtxtResult"); // NOI18N

        jbtnSchedule.setText(resourceMap.getString("jbtnSchedule.text")); // NOI18N
        jbtnSchedule.setEnabled(false);
        jbtnSchedule.setName("jbtnSchedule"); // NOI18N
        jbtnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnScheduleActionPerformed(evt);
            }
        });

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPanelLayout = new javax.swing.GroupLayout(JPanel);
        JPanel.setLayout(JPanelLayout);
        JPanelLayout.setHorizontalGroup(
            JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnSchedule)
                    .addComponent(jButton2)
                    .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(JPanelLayout.createSequentialGroup()
                            .addComponent(jradAnnuity)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                            .addComponent(jradLoan))
                        .addComponent(jbCalculate, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtAmount, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtRate, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtTerm, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtResult, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(0, 130, Short.MAX_VALUE))
        );
        JPanelLayout.setVerticalGroup(
            JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanelLayout.createSequentialGroup()
                .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jradLoan)
                            .addComponent(jradAnnuity))
                        .addGap(18, 18, 18)))
                .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtxtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jtxtTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jbCalculate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblResult)
                    .addComponent(jtxtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnSchedule)
                .addGap(1, 1, 1)
                .addComponent(jButton2)
                .addContainerGap())
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(financialabstract.FinancialAbstractApp.class).getContext().getActionMap(FinancialAbstractView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 368, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(JPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jradAnnuityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradAnnuityItemStateChanged
        if (jradAnnuity.isSelected()) {
            jlblAmount.setText(Annuity.AMOUNTDESCRIPTION);
            jlblResult.setText(Annuity.RESULTDESCRIPTION);
        }
    }//GEN-LAST:event_jradAnnuityItemStateChanged

    private void jradLoanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jradLoanItemStateChanged
        if (jradLoan.isSelected()) {
            jlblAmount.setText(Loan.AMOUNTDESCRIPTION);
            jlblResult.setText(Loan.RESULTDESCRIPTION);
        }
    }//GEN-LAST:event_jradLoanItemStateChanged

    private void jbCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCalculateActionPerformed
        double amount, rate;
        int term;
        NumberFormat curr = NumberFormat.getCurrencyInstance();
        
        try {
            amount = Double.parseDouble(jtxtAmount.getText());
        }catch (Exception e) {
            statusMessageLabel.setText("Please, enter a positive number. " +
                                       e.getMessage());
            jtxtAmount.requestFocus();
            return;
        } 
        try {
            rate = Double.parseDouble(jtxtRate.getText());
        }catch (Exception e){
            statusMessageLabel.setText("Please, enter number as in" + 
                            " the left example. " + e.getMessage());
            jtxtRate.requestFocus();
            return;
        }
        try {              
            term = Integer.parseInt(jtxtTerm.getText());
        }catch (Exception e) {
            statusMessageLabel.setText("Please, enter a positive whole" +
                    " number as month. " + e.getMessage() );
            jtxtTerm.requestFocus();
            return;
        }
        if (jradAnnuity.isSelected()) {
            financial = new Annuity(amount, rate, term);
        }else {
            financial = new Loan(amount,rate,term);
        }
        jtxtResult.setText(curr.format(financial.getResult()));
        jbtnSchedule.setEnabled(true);
    }//GEN-LAST:event_jbCalculateActionPerformed

    private void jbtnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnScheduleActionPerformed
        NumberFormat curr = NumberFormat.getCurrencyInstance();
        
        JTable sched;
        DefaultTableModel mod;
        
        String[] cols;
        String[][] t;
        
        if (financial instanceof Loan) {
        cols = new String[] {"Month", financial.getBegBalDesc(), 
                                      financial.getResultDesc(),
                                      financial.getIntFactor(),
                                      financial.getEndBalDesc(),
                                      "Prin. Paid"};
        t = new String[financial.getTerm()][6];
        } else if (financial instanceof Annuity) {
            cols = new String[] {"Month", financial.getBegBalDesc(), 
                                      Annuity.AMOUNTDESCRIPTION,
                                      financial.getIntFactor(),
                                      financial.getEndBalDesc()};
            t = new String[financial.getTerm()][5];
        } else {
            cols = new String[]{                
            };
            t = new String[financial.getTerm()][5];            
        }
        mod = new DefaultTableModel(t, cols);
        sched = new JTable(mod);
        for (int i = 1; i<= financial.getTerm(); i++){
            sched.setValueAt(i, (i-1), 0);  //month
            sched.setValueAt(curr.format(financial.getBegBal(i)), (i-1), 1);
            if (jradAnnuity.isSelected()){
                sched.setValueAt(curr.format(financial.getAmount()), (i-1), 2);
            } else if (jradLoan.isSelected()) {
                sched.setValueAt(curr.format(financial.getResult()), (i-1), 2);
            }
            sched.setValueAt(curr.format(financial.getIntFactor(i)), (i-1), 3);
            sched.setValueAt(curr.format(financial.getEndBal(i)), (i-1), 4);
            if (financial instanceof Loan) {
                Loan ln = (Loan) financial;
                sched.setValueAt(curr.format(ln.getPrinPaid(i)), (i-1), 5);       
            }
        }    
        JScrollPane sp = new JScrollPane(sched);
        JDialog dg = new JDialog();
        dg.add(sp);
        dg.setTitle(financial.getTitle());
        dg.setBounds(150, 400, 600, 300);
        dg.setVisible(true);
        
        
    }//GEN-LAST:event_jbtnScheduleActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jtxtAmount.setText("");
        jtxtRate.setText("");
        jtxtTerm.setText("");
        jtxtResult.setText("");
        statusMessageLabel.setText("");
        jtxtAmount.requestFocus();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbCalculate;
    private javax.swing.JButton jbtnSchedule;
    private javax.swing.JLabel jlblAmount;
    private javax.swing.JLabel jlblResult;
    private javax.swing.JRadioButton jradAnnuity;
    private javax.swing.JRadioButton jradLoan;
    private javax.swing.JTextField jtxtAmount;
    private javax.swing.JTextField jtxtRate;
    private javax.swing.JTextField jtxtResult;
    private javax.swing.JTextField jtxtTerm;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
